لحل مشكلة في العالم الحقيقي باستخدام لغات البرمجة انت بحاجة الي المتغيرات ، المتغيرات من الأسس الهامة في أي لغة برمجة. 
المتغيرات في بايثون ليست كائنات ولا حاويات تستخدم لأجل الكائنات ،  ولكن هي تشير الي مكان الكائن في الذاكرة. 

انظر الي هذا المثال 

a = [1,2,3]

b = a

a.append(8)

b 

[1,2,3,8]

لقد قمنا بإنشاء متغير يسمي 
a 

ويشير الي القائمة والتي تعتبر كائن في لغة بايثون 

ثم قمنا بإنشاء متغير أخر يسمي 
b 

يشير الي نفس المتغير السابق الذي يحتوي علي القائمة ، ثم اضفنا عنصر جديد الي المتغير. الأول باستخدام دالة
append 

وعندما طبعنا المتغير الثاني طبع لنا نتيجة النتغير الأول وتم تطبيق التغييرات علي كلا المتغيرين .. 

في بايثون لا نحتاج الي تعريف نوع المتغير قبل كتابته ، سواء نصي او رقمي ، وايضا حاول ان تكتب اسم متغير يشير الي قيمته ونوع بياناته ،. 
وعلي سبيل المثال اذا اردنا معرفة نوع البيانات التي يحتويها المتغير نستخدم الدالة 
typy 

مثلا

a=1

print(type(a))

int

لقد طبع لنا المفسران نوع المتغير هنا رقمي ويسمي في البرمجة
int
اختصارا لكلمة 
integer 

ومن اشهر انواع البيانات في لغات البرمجة

int رقمي

float عشري 

str نصي 


# Varible Scope  تحديد نطاق المتغيرات 

المتغيرات في بايثون لها قواعد وقوانين ويعتبر قانون النطاق من اهم القوانين في استخدام المتغيرات مع الدوال

عندما تقوم بتفيذ اي كود برمجي داخل دالة تحتوي علي متغيرات سيقوم البرنامج اولا بالبحث عن  شى يسمي

Local Enviroment (name space)

ان لم يجده سيبحث عن 
Global namespace 

اذا لم يجده سيبحث عن 
built-in namespace 

واذا لم يجد شئ من هؤلاء الثلاثة سيطبع لك خطأ 
NameError 


قبل أن نبدء بالمثال دعني اولا اوضح لك هذه المفاهيم 

١- Local enviroment 
يحتوي علي المتغيرات والمعاملات الموجودة داخل الدالة 

٢- global namespace
هو المتغير الذي يحتوي علي قيم موجودة خارج نطاق الدالة وليس بداخلها 


مثال :-

a = 15 
b = 25

def my_function():

    global a
    
    a = 11
    b = 21 
    
    my_function():
    print(a) # 11
    print(b) # 25 
    
لاحظ في هذا المثال قيمة المتغير 
a = 15 

ولكن عند لطباع كان الناتج ١١ ذلك لأن المتغير موجود خارج الدالة فهو من النوع 
global 

لطباعة قيمته نحتاج اولا الي استدعائه داخل الدالة كما بالسطر ٨٩ ثم نقوم بتغيير قيمته او التعديل عليه كما نحب 




